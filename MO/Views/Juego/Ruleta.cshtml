@model List<MO.Models.Categoria>
@{
    ViewData["Title"] = "Selecciona una categoría";
}

<h2 class="page-title">Selecciona una tarjeta</h2>

<div class="card-container-categorias">
    @for (int i = 0; i < Model.Count; i++)
    {
        <div class="card-categoria" data-id="@Model[i].id_categoria" data-name="@Model[i].nombre_categoria">
            <div class="card-inner-categoria">
                <div class="card-front-categoria">Tarjeta @(@i + 1)</div>
                <div class="card-back-categoria">@Model[i].nombre_categoria</div>
            </div>
        </div>
    }
</div>

<script>
    const cards = document.querySelectorAll('.card-categoria');

    cards.forEach(card => {
        card.addEventListener('click', () => {
            if(card.classList.contains('flipped')) return;

            card.classList.add('flipped');

            setTimeout(() => {
                const id = card.getAttribute('data-id');
                window.location.href = `/Juego/SeleccionarCategoria?idCategoria=${id}`;
            }, 1500);

            cards.forEach(c => { if(c !== card) c.style.pointerEvents = 'none'; });
        });
    });
</script>


<style>
    /* Título “Selecciona una tarjeta” */
    .page-title {
        display: inline-block;
        background: linear-gradient(135deg, #1a1a2e, #101540);
        color: #fff;
        padding: 8px 20px;
        border-radius: 12px;
        font-size: 2rem;
        font-weight: 900;
        text-align: center;
        margin-bottom: 40px;
        position: relative;
    }

        .page-title::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: #000;
            border-radius: 12px;
            z-index: -1;
            opacity: 0.7;
        }

    /* Contenedor específico de tarjetas */
    .card-container-categorias {
        display: flex;
        gap: 20px;
        justify-content: center;
        flex-wrap: wrap;
    }

    /* Tarjetas */
    .card-categoria {
        width: 160px;
        height: 220px;
        perspective: 1000px;
        cursor: pointer;
        transition: transform 0.3s ease;
    }

        .card-categoria:hover {
            transform: translateY(-5px) scale(1.05);
        }

    .card-inner-categoria {
        position: relative;
        width: 100%;
        height: 100%;
        text-align: center;
        transition: transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);
        transform-style: preserve-3d;
        border-radius: 16px;
        box-shadow: 0 0 15px rgba(11,29,81,0.5);
    }

    .card-categoria.flipped .card-inner-categoria {
        transform: rotateY(180deg);
    }

    /* Frontal y trasera */
    .card-front-categoria, .card-back-categoria {
        position: absolute;
        width: 100%;
        height: 100%;
        border-radius: 16px;
        backface-visibility: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 700;
        font-size: 1.1rem;
        padding: 10px;
        text-align: center;
        transition: all 0.3s ease;
    }

    /* Frontal: morado → rosa */
    .card-front-categoria {
        background: linear-gradient(145deg, #8a2be2, #ff6a95);
        color: #fff;
        box-shadow: 0 0 15px rgba(138,43,226,0.5);
    }

    /* Trasera: azul celeste claro */
    .card-back-categoria {
        background: linear-gradient(145deg, #a2d5f2, #5bc0eb);
        color: #000;
        transform: rotateY(180deg);
        font-size: 1rem;
        box-shadow: 0 0 15px rgba(92,192,235,0.5);
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .card-categoria

    {
        width: 130px;
        height: 180px;
    }

    .card-front-categoria, .card-back-categoria {
        font-size: 0.9rem;
    }

    }
</style>
